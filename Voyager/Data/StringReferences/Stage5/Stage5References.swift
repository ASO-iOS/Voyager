//
//  Stage5References.swift
//  Voyager
//
//  Created by admin on 28.11.2023.
//

import Foundation

struct Stage5PreviewReference: PhraseDelegate {
    static let shared = Stage5PreviewReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Раньше ты и представить не мог, что мошенничество вокруг мира спорта может достигать таких пределов. Был ещё кластер мошенничества вокруг мошенничества – это когда в интернете каждому встречному предлагалось войти в долю, делать ставки на чужие деньги, ну а дальше всё, внезапно, плохо заканчивалось.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "Но и прибыль теперь стала не та, что прежде, и не так редко, и не так тяжко. Ты сменил однушку дьяка на хорошую большую квартиру, но от всех этих сподвижек жизнь твоя не стала спокойнее. Ты по-прежнему мог влететь в любой момент, ведь тебе могли подложить свинью на любом из этапов больших махинаций, а ещё было неизвестно, кто и как отвечает за безопасность афер. Кроме этого, настораживала одна недавняя встреча, которая состоялась при полноценном вводе в круг посвящённых.",
        type: .common
    )
    
    private let text2 = PhraseData(
        text: "- Оба-на, какие люди. А я думал, ты того.",
        type: .randomGuy
    )
    
    private let text3 = PhraseData(
        text: "Было сложно понять, говорит ли незнакомец всерьёз. Встреча только началась, он не представился. Хотя ты понимал, что представляться тебе ещё пока никто не обязан.",
        type: .common
    )
    
    private let text4 = PhraseData(
        text: "- У нас что, проблемы?",
        type: .mc
    )
    
    private let text5 = PhraseData(
        text: "Вводящим тебя элементом здесь был спортсмен, и, как видно, он тоже не понимал, что всё это должно значить.",
        type: .common
    )
    
    private let text6 = PhraseData(
        text: "- Нет, я не думаю. У меня вообще проблем нет, ведь твой друг представлял, на что шёл, когда пользовался моими услугами. Он решил, что ему дозволено кое-как, окольными путями, через торы-даркнеты выйти на меня и рассчитывать, что я буду ему обязан… Обязать меня дуралею с дороги  - это почти оскорбление, друг забыл своё место.",
        type: .randomGuy
    )
    
    private let text7 = PhraseData(
        text: "- Давайте-ка вот как мы решим: ты, дружок, должен быть ещё мне благодарен, что за первый транзит я отдал тебе рабочие документы, вполне сносные, чтобы жить с ними без палева. Ну а дальше я узнал, откуда ты берёшь свои миллионы, так что мне уже стало не по понятиям тебе помогать. Я тебя людей разводить не учил и не наставлял, так что ты сам оказался во всём виноват, это понимать уже надо, ты ведь не маленький.",
        type: .randomGuy
    )
    
    private let text8 = PhraseData(
        text: "Ты молчал, спортсмен молчал, пауза затягивалась.",
        type: .common
    )
    
    private let text9 = PhraseData(
        text: "- По делам претензий нет, пускай каждый за своё отвечает. А про бога ты больше не заикайся, а не то он опять накажет тебя, псевдогуру.",
        type: .mc
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9]
    }
}

struct Stage5OptionsReference: PhraseDelegate {
    static let shared = Stage5OptionsReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Ты решил попить дорогих вискарей и отправился угощать напёрсточника в бар, когда спортсмена там не было.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "- Ну ты здорово поднялся, ничего, конечно, не скажешь. С уважаемыми господами дела делаешь.",
        type: .thimblesMan
    )
    
    private let text2 = PhraseData(
        text: "- Да ну, к чёртовой матери, вот ищу, на что бы переключиться. Я пошёл бы на работу, но башка не варит, и я ничего не умею, а мыть пол не хочется, когда в это же время можно поднимать на всяких затеях, пусть и рискуя.",
        type: .mc
    )
    
    private let text3 = PhraseData(
        text: "- А ты пробовал сложить все деньги в одну большую кучу и вложиться как следует? Сейчас много всякой хери с валютами, бизнесами и прочим, есть же варики разные.",
        type: .thimblesMan
    )
    
    private let text4 = PhraseData(
        text: "- Стартапы мне уже предлагали, а валюта это что вообще? Как там деньги делать?",
        type: .mc
    )
    
    private let text5 = PhraseData(
        text: "- Да вот есть сейчас типо как казино, только связано с ценами на разные активы, обычные и электронные. Если ты способен анализировать много данных, много новостей, то ты сможешь угадать и поставить на рост или на понижение, и поднять свою прибыль.",
        type: .thimblesMan
    )
    
    private let text6 = PhraseData(
        text: "- Звучит похоже на ставки на спорт без договорняков. А в валютах договорняки бывают?",
        type: .mc
    )
    
    private let text7 = PhraseData(
        text: "- Да кто его знает, тема новая, участников выше крыши.",
        type: .thimblesMan
    )
    
    private let text8 = PhraseData(
        text: "- А как называется сама технология, как мне это искать, что мне гуглить?",
        type: .mc
    )
    
    private let text9 = PhraseData(
        text: "- Бинарные опционы.",
        type: .thimblesMan
    )
    
    private let text10 = PhraseData(
        text: "- Понял. Посмотрю, что окажется хуже: моя жизнь или это.",
        type: .mc
    )
    
    //SIDE
    
    private let textSide0 = PhraseData(
        text: "Вечерело. В едва соображающей голове клубились мысли об особенностях опционов, про которые ты прочёл за сегодня. Ты за это время осушил бутылку виски, что тоже сказывалось. Выходя из бара, ты заметил паренька в капюшоне. Не заметить его было сложно, ведь он встал у тебя на пути.",
        type: .common
    )
    
    private let textSide1 = PhraseData(
        text: "- Привет, друг. Ты устал, я вижу, прошу простить меня за беспокойство, просто людей на улице уже почти нет и мне больше тут не к кому обратиться.",
        type: .cryptoMan
    )
    private let textSide2 = PhraseData(
        text: "-…?",
        type: .mc
    )
    
    private let textSide3 = PhraseData(
        text: "- Я приезжий, остановился в гостинице на другом конце города. И только сейчас заметил, что всю свою наличку я оставил в номере. Может, выручишь мелочью? Мне буквально до отеля доехать.",
        type: .cryptoMan,
        answerPositive: "Дать денег",
        answerNegative: "Послать бродягу куда подальше",
        answerNeutral: "Проверить сколько с собой мелочи",
        hasAnswers: true
    )
    
    private let textSideNeutral = PhraseData(
        text: "Ты на самом деле нащупал монетки в карманах, достал и пересчитал, но их как раз хватало, чтобы доехать до дома самому. Так и пришлось пояснить человеку в капюшоне, врать не понадобилось. Он не стал донимать, вроде того, что “на нет и суда нет”.",
        type: .common
    )
    
    private let textSidePositive = PhraseData(
        text: "Он просил немного, ты решил помочь новому горожанину. Оказалось, что он не обманщик и не нищий, а деньги у него были. Он был состоятельным человеком, который решил от скуки провести что-то вроде социального эксперимента. Так как ты показал себя неравнодушным, щедрым и участливым человеком, он за эти качества тебя вознаграждает: за каждую полученную монету он отплатил купюрой. Вот так.",
        type: .common
    )
    
    
    private let textSideNegative0 = PhraseData(
        text: "Ты решил его слать подальше, ведь тебе итак уже почти плохо, а тут ещё нужно пальцами набирать мелочь да высчитывать её в таком состоянии; да и было бы для чего, ведь скорее всего он простой попрошайка. Так что парень был отправлен в далёкие дали.",
        type: .common
    )
    
    private let textSideNegative1 = PhraseData(
        text: "Телефон у тебя разрядился, а вокруг не было ни одной машины такси, чтобы доехать до дома. К тому времени выпитое начало давать о себе знать, и тебе захотелось сбегать в кустики, которых не было в залитой асфальтом части города. А кругом фонари да прямоугольные дома, всё везде просматривается, уединиться просто негде. Ты решил добежать до вокзала, просто чтобы сходить в туалет в зоне ожидания. На входе сканеры, ты скинул трубу и ключи и спешно пошёл вперёд. Сканер завопил. Ты ещё раз – он опять.",
        type: .common
    )
    
    private let textSideNegative2 = PhraseData(
        text: "- А вы выложили весь металл, технику?",
        type: .common
    )
    
    private let textSideNegative3 = PhraseData(
        text: "- Да.",
        type: .mc
    )
    
    private let textSideNegative4 = PhraseData(
        text: "- Точно?",
        type: .common
    )
    
    private let textSideNegative5 = PhraseData(
        text: "- Да точно! Давайте скорее…",
        type: .mc
    )
    
    private let textSideNegative6 = PhraseData(
        text: "Тебя начали обыскивать ручным прибором, в карманах звон усилился. Оказалось, что это была мелочь. Та самая, которую ты не стал отдавать попрошайке. По правилам вокзала, так как ты не выложил её сам, тебя нужно было оформить. Ничего страшного, просто ждать очень долго. Тебя даже отпустили в туалет, худшего не случилось: ты, так сказать, донёс груз и излил душу - но тебе потом пришлось проходить все стадии оформления в стельку пьяным. На утро ты был убит похмельем и бессилием, пришлось спать до конца дня, а потом ещё в себя приходить. ",
        type: .common
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9, text10, textSide0, textSide1, textSide2, textSide3, textSideNeutral, textSidePositive, textSideNegative0, textSideNegative1, textSideNegative2, textSideNegative3, textSideNegative4, textSideNegative5, textSideNegative6]
    }
}

struct Stage5CryptoReference: PhraseDelegate {
    static let shared = Stage5CryptoReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Ты сидишь в баре с напёрсточником.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "- Значит так – напивалово в баре, часть вторая.",
        type: .mc
    )
    
    private let text2 = PhraseData(
        text: "- Вторая? Ты опять попросишь, чтобы я за тебя придумал, как тебе соскочить с этой жизни лихой и разгульной?",
        type: .thimblesMan
    )
    
    private let text3 = PhraseData(
        text: "- Почему бы и нет? Тема с опционами была интересной, я нагуглил всякой всячины выше крыши, но кое-что я не понял. Что за тема такая – криптовалюты?",
        type: .mc
    )
    
    private let text4 = PhraseData(
        text: "- Ооо…",
        type: .thimblesMan
    )
    
    private let text5 = PhraseData(
        text: "Спустя три часа.",
        type: .common
    )
    
    private let text6 = PhraseData(
        text: "- Ну теперь понимания стало побольше. Так а что такого случилось, что раньше это никому было не нужно, а теперь даже нам с тобой это известно?",
        type: .mc
    )
    
    private let text7 = PhraseData(
        text: "- Много всякого, мировой кризис в первую очередь, банковский беспредел, конфискация средств из всяких оффшоров вместо экономических преобразований для издыхающей экономики.",
        type: .thimblesMan
    )
    
    private let text8 = PhraseData(
        text: "- Э, полегче, ты откуда вообще знаешь такие слова? Ты играешь в напёрстки.",
        type: .mc
    )
    
    private let text9 = PhraseData(
        text: "- Мне давали поручение объяснить браткам, почему в золоте больше деньги никто не хранит, или только хранит, и не приумножает. Пришлось разбираться, много часов ушло. Да сейчас уже нет таких тайн, интернет изменил всё, всё можно найти. Если время есть и желание.",
        type: .thimblesMan
    )
    
    private let text10 = PhraseData(
        text: "- Так а правила какие у криптовалют? Тоже нужно шерстить новостной фон, чтобы знать, что будет в цене?",
        type: .mc
    )
    
    private let text11 = PhraseData(
        text: "- А ты знаешь, какие новости нужно читать? Новостей в мире больше, чем событий, и уж точно больше, чем реальных перемен в наших жизнях. Шерстить можно, но тут нужно ещё разбираться, в чём смысл новых валют, почему одни механизмы крипты перспективнее, чем другие. Немного напоминает стартапы: нужно знать, что проканает, и в это вложиться. А для этого нужно въехать.",
        type: .thimblesMan
    )
    
    private let text12 = PhraseData(
        text: "- Всё, я понял – напиваемся, отсыпаемся, оклемаемся и врубаемся.",
        type: .mc
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9, text10, text11, text12]
    }
}

struct Stage5CharityReference: PhraseDelegate {
    static let shared = Stage5CharityReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Разговор со спортсменом",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "- Привет. Я спросить хотел, ты всю жизнь в этих делах варишься, ты не думал выходить в легал, чтобы от греха?",
        type: .mc
    )
    
    private let text2 = PhraseData(
        text: "- А куда у нас выйдешь? Я пытался одно время разузнать про покупку спортсменов, на западе же есть такое, люди деньги на этом делают.",
        type: .sportsman
    )
    
    private let text3 = PhraseData(
        text: "- У тебя есть такие суммы?",
        type: .mc
    )
    
    private let text4 = PhraseData(
        text: "- Нет конечно, откуда. Но у меня было достаточно на руках свободных денег, чтобы покупать молодёжь. Типо вкладываешься в мальца, которого тренируют, годы идут, он растёт, и в итоге из него получается полноценный спортсмен. Цена вырастает раза в 4 или 6, просто ждать долго и случиться может всё, что угодно. Вдруг его обучат плохо? Или выпустят играть в дождик, он поскользнётся и сломает лодыжку? Вариантов тьма, ну а чтобы исключать риски, нужна индустрия, поставленный процесс, инкубация игроков и атлетов, а у нас, сам знаешь…",
        type: .sportsman
    )
    
    private let text5 = PhraseData(
        text: "- Хм, интересно. Может, можно вложиться так в каких-то студентов, проучить их в каком-нибудь западном вузе, а потом продать на контракт?",
        type: .mc
    )
    
    private let text6 = PhraseData(
        text: "- Да чего ты ко мне-то суёшься с такими вещами? Я шарю-то только в футболе. Я скорее вложусь в продажу хороших мячиков, чем смогу заработать вот так, как ты говоришь.",
        type: .sportsman
    )
    
    private let text7 = PhraseData(
        text: "Позднее, в другой локации, разговор со знакомым спортсмена, который предлагал стартапы в разделе “инвестирование”.",
        type: .common
    )
    
    private let text8 = PhraseData(
        text: "- Привет, давно не виделись. Как там стартапы?",
        type: .mc
    )
    
    private let text9 = PhraseData(
        text: "- Привет. Да какие-то могут, какие-то нет. А ты хочешь вложиться во что-то? В этот раз уже поздновато, а то многие ниши заполнили с момента нашей прошлой встречи.",
        type: .investMan
    )
    
    private let text10 = PhraseData(
        text: "- Так и что, для чего я копил свои мильёны? Куда мне теперь деньги вложить?",
        type: .mc
    )
    
    private let text11 = PhraseData(
        text: "- Можно сделать вложение в людские ресурсы. Сейчас люди с запада выкупают грамотных специалистов из стран третьего мира, чтобы сажать на многолетние контракты по низкой цене. Низкой по и меркам, по нашим меркам это сытая жизнь за бугром.",
        type: .investMan
    )
    
    private let text12 = PhraseData(
        text: "- Так и как тут вклиниться можно?",
        type: .mc
    )
    
    private let text13 = PhraseData(
        text: "- Частично. Нужно оплатить человеку переезд, обеспечение на время учёбы, стажировку, курсы, изучение языка, повышение специализации и так далее. Взамен он будет искать работу через контору, которая тебя оформит как его спонсора. Есть конторы, которые сдают в аренду работников, забирая себе часть выплат. Вот такие тебе и нужны, они будут обеспечивать весь процесс.",
        type: .investMan
    )
    
    private let text14 = PhraseData(
        text: "- А там можно прогореть, не окупить вложения?",
        type: .mc
    )
    
    private let text15 = PhraseData(
        text: "- Конечно, произойти может всё, что угодно. Например, пока учится парень, будет возвращаться домой в свой провинциальной отчизне, как его посадит на нож какой-нибудь гопник. Вот и всё, ребята.",
        type: .investMan
    )
    
    private let text16 = PhraseData(
        text: "- Ну, такие риски есть в любом деле, так и нас с тобой могут запросто…",
        type: .mc
    )
    
    private let text17 = PhraseData(
        text: "- Меня нет, говори за себя.",
        type: .investMan
    )
    
    private let text18 = PhraseData(
        text: "- Ладно, понял. Я думаю, стоит попробовать.",
        type: .mc
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9, text10, text11, text12, text13, text14, text15, text16, text17, text18]
    }
}

struct Stage5StocksReference: PhraseDelegate {
    static let shared = Stage5StocksReference()
    private init() {}
    
    private let text0 = PhraseData(
        text: "Это был срочный звонок от партнёра по казино, он говорил сбивчиво и непонятно. Чем бороться с его дикцией и темпом речи, проще было назначить встречу.",
        type: .common
    )
    
    private let text1 = PhraseData(
        text: "- Всё, беда, нам конец, шулеры уйдут на дно. То есть мы, честные игроки, труженники, уйдём на дно, всё…",
        type: .casinoPartner
    )
    
    private let text2 = PhraseData(
        text: "- А чего такого случилось, чего не было раньше? Передел сфер влияния у местных авторитетов?",
        type: .mc
    )
    
    private let text3 = PhraseData(
        text: "- Да это куда не шло, его можно хоть переждать и вернуться, а тут… Ты ведь в курсе, что мы с тобой греемся на солнышке, до тех пор, пока оно ещё светит?",
        type: .casinoPartner
    )
    
    private let text4 = PhraseData(
        text: "- Ты сейчас про что конкретно? Если ты про алгоритмы для развода однорукого бандита, то я проживу и без них…",
        type: .mc
    )
    
    private let text5 = PhraseData(
        text: "- Я тебе про всю атмосферу и ситуацию в целом. Казино, бабло, веселье – это всё привилегии развитых социумов, где у людей чуть выше среднего есть свободные деньги и желание с ними расстаться. А теперь наш социум стремительно таким быть перестанет.",
        type: .casinoPartner
    )
    
    private let text6 = PhraseData(
        text: "- Почему?",
        type: .mc
    )
    
    private let text7 = PhraseData(
        text: "- Ты вообще не смотришь новости? Ах да, у тебя же нет телевизора. И голова не работает. Короче, нас обступают. Или нет, нам говорят, что нас обступают, а это куда важнее. Пропаганда поёт во все стороны, что, типо, враг у ворот, кругом лишь предатели и друзей у нас нет.",
        type: .casinoPartner
    )
    
    private let text8 = PhraseData(
        text: "- Задолбался я объяснять. Сейчас может случиться всё, что угодно: от ускоренной инфляции цен из-за проблем с экономикой до горячих столкновений неизвестно кого с не пойми кем из-за поводов, о существовании которых мы узнаем в самый последний день.",
        type: .casinoPartner
    )
    
    private let text9 = PhraseData(
        text: "- Короче, денег теперь не станет совсем, и это нас погубит куда больше, чем к одиннадцати туз…",
        type: .casinoPartner
    )
    
    private let text10 = PhraseData(
        text: "Ты был спокоен, не перебивал, но смотрел на него, как на сумасшедшего. Однако, он был прав – ты ведь в самом деле не видишь обстановку дальше собственного носа, а ведь твоя страна – страна чудес, тут возможно вообще что угодно.",
        type: .common
    )
    
    private let text11 = PhraseData(
        text: "- Хорошо, допустим, так а что тогда делать?",
        type: .mc
    )
    
    private let text12 = PhraseData(
        text: "- Я подозреваю, что и в этом случае маза есть смухлевать. Ты ведь слышал про инвестиции в акции?",
        type: .casinoPartner
    )
    
    private let text13 = PhraseData(
        text: "- Ну да, типо предприятия растут, но так медленно, что на известных кампаниях не особо ты что поднимешь.",
        type: .mc
    )
    
    private let text14 = PhraseData(
        text: "- Да, но тут и просто сохранить было бы неплохо, перезимовать, а потом, может, и вывести чуть побольше. Короче, я думаю так: у нас ведь есть деньги?",
        type: .casinoPartner
    )

    private let text15 = PhraseData(
        text: "- Да.",
        type: .mc
    )
    
    private let text16 = PhraseData(
        text: "- Без них ещё не умеем пока, ну во всяком случае мы?",
        type: .casinoPartner
    )
    
    private let text17 = PhraseData(
        text: "- Да.",
        type: .mc
    )
    
    private let text18 = PhraseData(
        text: "- А за деньги отвечает кто? Кто их печатает?",
        type: .casinoPartner
    )
    
    private let text19 = PhraseData(
        text: "- Банки.",
        type: .mc
    )
    
    private let text20 = PhraseData(
        text: "- Вот туда я и вложу всё, что есть. У нас один такой банк, где самый главный начальник дружит с первыми лицами и уже давно. И сейчас у него цена на акции подупала, на фоне тревожных событий и предпосылок, так что я несу всё туда. Ты смотри давай сам, я тебя, если что, предупредил.",
        type: .casinoPartner
    )
    
    private let text21 = PhraseData(
        text: "- Да, я понял, спасибо.",
        type: .mc
    )
    
    var phrases: [PhraseData] {
        return [text0, text1, text2, text3, text4, text5, text6, text7, text8, text9, text10, text11, text12, text13, text14, text15, text16, text17, text18, text19, text20, text21]
    }
}
